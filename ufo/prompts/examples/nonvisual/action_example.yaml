version: 1.0

example1: |-
  User Request: 
      "My name is Zac. Please send a email to jack@outlook.com to thanks his contribution on the open source."
  Response: 
      {"Observation": "The control item list indicates that I am on the Main Page of Outlook. The Main Page has a list of control items and email received. The new email editing window is not opened. The last action took effect by opening the Outlook application.",
      "Thought": "Base on the control item list, I need to click the New Email button to open a New Email window for the one-step action.",
      "ControlLabel": "1",
      "ControlText": "New Email",
      "Function": "click_input",
      "Args": {"button": "left", "double": false},
      "Status": "CONTINUE",
      "Plan": "(1) Input the email address of the receiver.\\n(2) Input the title of the email. I need to input 'Thanks for your contribution on the open source.'.\\n(3) Input the content of the email. I need to input 'Dear Jack,\\nI hope this message finds you well. I am writing to express my sincere gratitude for your outstanding contribution to our open-source project. Your dedication and expertise have truly made a significant impact, and we are incredibly grateful to have you on board.\\nYour commitment to the open-source community has not gone unnoticed, and your recent contributions have been instrumental in enhancing the functionality and quality of our project. It's through the efforts of individuals like you that we are able to create valuable resources that benefit the community as a whole.\\nYour code reviews, bug fixes, and innovative ideas have not only improved the project but have also inspired others to contribute their best. We recognize and appreciate the time and effort you've invested in making our open-source initiative a success.\\nPlease know that your contributions are highly valued, and we look forward to continued collaboration with someone as talented and dedicated as yourself. If there's anything you need or if you have further ideas you'd like to discuss, please don't hesitate to reach out.\\nOnce again, thank you for your exceptional contributions. We are fortunate to have you as part of our open-source community.\\nBest regards,\\nZac'.\\n(4) Click the Send button to send the email.",
      "Comment": "After I click the New Email button, the New Email window will be opened and available for composing the email."}


example2: |- 
  User Request: 
      "My name is Zac. Please send a email to jack@outlook.com to thanks his contribution on the open source."
  Response: 
      {"Observation": "The control item list indicates that I am on a calendar page of Outlook. The new email editing window is not opened and also the New Email button is not available from the control item list. The last action took effect by opening the Outlook windows.",
      "Thought": "Base on the previous plan, I need to click the New Email button to open a New Email window. However, the New Email button is not available in the control item list, also not available in the control information. I may need to first click the Main Page TabItem to switch to the Main Page, and then find and click the New Email button to open a New Email window.",
      "ControlLabel": "34",
      "ControlText": "Main Page",
      "Function": "click_input",
      "Args": {"button": "left", "double": false},
      "Status": "CONTINUE",
      "Plan": "(1) Find the New Email button in the Main Page and click it to open a New Email window. If the New Email button is still not available in the control item list, I may need to look for take action on other control items to navigate to the New Email button.\\n(2) Input the email address of the receiver.\\n(3) Input the title of the email. I need to input 'Thanks for your contribution on the open source.'.\\n(4) Input the content of the email. I need to input 'Dear Jack,\\nI hope this message finds you well. I am writing to express my sincere gratitude for your outstanding contribution to our open-source project. Your dedication and expertise have truly made a significant impact, and we are incredibly grateful to have you on board.\\nYour commitment to the open-source community has not gone unnoticed, and your recent contributions have been instrumental in enhancing the functionality and quality of our project. It's through the efforts of individuals like you that we are able to create valuable resources that benefit the community as a whole.\\nYour code reviews, bug fixes, and innovative ideas have not only improved the project but have also inspired others to contribute their best. We recognize and appreciate the time and effort you've invested in making our open-source initiative a success.\\nPlease know that your contributions are highly valued, and we look forward to continued collaboration with someone as talented and dedicated as yourself. If there's anything you need or if you have further ideas you'd like to discuss, please don't hesitate to reach out.\\nOnce again, thank you for your exceptional contributions. We are fortunate to have you as part of our open-source community.\\nBest regards,\\nZac'.\\n(5) Click the Send button to send the email.",
      "Comment": "I am looking for the New Email button, and will try to find it in the Main Page."}


example3: |-
  User Request: 
      "Send a message to Tom on Teams to ask him if he can join the meeting at 3pm."
  Response: 
      {"Observation": "The control item list indicates that I am on the chat window of Tom on Teams, the message input box is empty and ready to input. ",
      "Thought": "Base on the control item list and my action history, I have opened, and now on the chat window of Tom on Teams. I need to input the message in the Edit control named 'Type a new message' for the current one-step action, which is not sensitive and does not confirmation.",
      "ControlLabel": "36",
      "ControlText": "Type a new message",
      "Function": "set_edit_text",
      "Args": {"text": "Hello Tom. It's 3 PM. \\n Are you available to join the meeting now?"},
      "Status": "CONTINUE",
      "Plan": "(1) Click the Send button to send the message. This is a sensitive action that need to be confirmed by the user before the execution.",
      "Comment": "Inputting the message is not a sensitive action and do not need to be confirmed."}


example4: |- 
  User Request: 
      "Draft an email to Amy to ask her how she feels about the new project."
  Response: 
      {"Observation": "The control item list indicates that I am on the editing window of a new email, and the 'To', 'CC', 'Title' and 'Email Body' blocks are visible and ready to input. The title of the email has already been filled. The last action took effect by opening the Outlook windows and jump to the new email editing window directly.",
        "Thought": "Base on the previous plan, I need to click the New Email button to open a New Email window. But the seems like the New Email window has already opened and the title of email has already been inputted. I skip some of the actions in the previous plan and move to draft the content of the email and send it to Amy.",
        "ControlLabel": "36",
        "ControlText": "Email Body",
        "Function": "set_edit_text",
        "Args": {"text": "Dear Amy,\\nI hope this message finds you well. I am writing to ask how you feel about the new project. Let me know if you have any concerns.\\nBest regards,\\n [Sender's Name]"},
        "Status": "FINISH",
        "Plan": "<FINISH>",
        "Comment": "I revised the previous plan base on the control item list since I think the New Email window has already opened and the title of email has already been inputted. I cannot input the email address since it is not provided in the user request. Since the user did not ask me to send the email, the task is finished after I draft the content of the email."}


example5: |- 
  User Request: 
      "Search for the word 'UFO' in the document."
  Response: 
      {"Observation": "The control item list indicates that I am on the editing window of a Word file. The search box is visible and the word 'UFO' is already inputted.",
        "Thought": "Base on the control item list, the word 'UFO' is already inputted in the Edit control named 'Find'. I need to click the Find button to search for the word 'UFO' in the document, and the task is finished.",
        "ControlLabel": "59",
        "ControlText": "Find",
        "Function": "click_input",
        "Args": {"button": "left", "double": false},
        "Status": "FINISH",
        "Plan": "<FINISH>",
        "Comment": "I searched for the word 'UFO' in the document successfully. The user should view the search result."}

example6: |- 
  User Request: 
      "Quickly remove all notes in the presentation.pptx, without looping through each slide."
  Response: 
      {"Observation": "The current control item list indicates the PowerPoint application with the 'presentation.pptx' file open. The 'File Tab' button is visible, which is needed to access the backstage view where the 'Check for Issues' option is located. This matches the next step in the previous plan. The application appears to be in the normal editing view, and no backstage view or other menus are open at this time.",
        "Thought": "The user request to do it quickly. To make the task more efficient, I need to use some fast but niche tricks using the 'Remove All Presentation Notes' function.  To do so, I need to first click the 'File' button to open the menu.",
        "ControlLabel": "59",
        "ControlText": "File",
        "Function": "click_input",
        "Args": {"button": "left", "double": false},
        "Status": "CONTINUE",
        "Plan": "(1) Click the 'Info' ListItem, to access the 'Info' page.\\n  (2) Click the 'Check for Issues' MenuItem, to open a menu for checking. \\n (3) Click the 'Inspect Document', to open a document inspector. \\n (4) Click the 'Inspect' button, to inspect the ppt for notes. \\n (5) I should now find and click the 'Remove All Presentation Notes'. However, this button is usually at the bottom of the menu, and therefore I should apply wheel_mouse_input(wheel_dist=-20) to a ScrollBar to reach the menu bottom to make this button visible.\\n (8) Once 'Remove All Presentation Notes' is visible, I should click it to remove all notes in the presentation.pptx file. This action is sensitive to the system and need to be confirmed by the user.",}
        "Comment": "I plan to use the 'Remove All Presentation Notes' function. This is the fastest way to remove all notes in the presentation.pptx file."}

example7: |- 
  User Request: 
      "How many stars does the Imdiffusion repo have?"
  Response: 
      {"Observation": "I observe that the Edge browser is available from the control item list, and the with the Google search page opened.",
        "Thought": "I need to input the text 'Imdiffusion GitHub' in the search box of Google to get to the Imdiffusion repo page from the search results. The search box is usually in a type of ComboBox.",
        "ControlLabel": "36",
        "ControlText": "搜索",
        "Function": "set_edit_text",
        "Args": {"text": "Imdiffusion GitHub"},
        "Status": "CONTINUE",
        "Plan": "(1) After input 'Imdiffusion GitHub', click Google Search to search for the Imdiffusion repo on github.\\n (2) Once the searched results are visible, click the Imdiffusion repo Hyperlink in the searched results to open the repo page.\\n (3) Observing and summarize the number of stars the Imdiffusion repo page, and reply to the user request.",
        "Comment": "I plan to use Google search for the Imdiffusion repo on github and summarize the number of stars the Imdiffusion repo page visually."}

example8: |-
  User Request: 
      "Please remind me to get party dinner (5 people) preparation done before 5PM today with steps and notes."
  Response: 
      {"Observation": "The current control item list indicates that I am on the Microsoft To Do application. The application is open and there is a edit block at the bottom for inputting the task.",
        "Thought": "I need to add a task of 'Get party dinner (5 people) preparation done before 5PM today.' to the edit block of 'Add a task in “My Day”'. I also need to set more details for the task afterwards, including adding steps and notes.",
        "ControlLabel": "19",
        "ControlText": "Add a task in “My Day”",
        "Function": "set_edit_text",
        "Args": {"text": "Get party dinner (5 people) preparation done before 5PM today."},
        "Status": "CONTINUE",
        "Plan": "(1) Click the ListItem of the task that was just created to set more details. \\n (2) Add a step 1 for the task by inputing 'Menu Planning and Ingredient Acquisition' in the Add step edit control. \\n (3) Add a step 2 for the task by inputing 'Meal Preparation Schedule' in the  Add step edit control following the step one. \\n (4) Add a step 3 for the task by inputing 'Setting Up the Dining Area' in the  Add step edit control following the step two. \\n (5) Add a note to this task in the 'Add note' edit blocking at the bottom by inputing 'Considering preferences, dietary restrictions and food allergiesof the guests.'. \\n (6) Close the details view by clicking the 'Dismiss detail view' botton.",
        "Comment": "After creating the task, I need to set more details for the reminder, including adding steps and notes."}


example9: |-
  User Request: 
      "Please create a slide from the meeting_notes.docx in the presentation1.pptx."
  Response: 
      {"Observation": "The current control item list indicates that I am on the Microsoft PowerPoint application. The Copilot Add-in is avaialble from the control item list.",
        "Thought": "I need to double click the Copilot Add-in, which can help me create a slide from the meeting_notes.docx. The Copilot Add-in can directly create a slide from the meeting_notes.docx.",
        "ControlLabel": "60",
        "ControlText": "Copilot",
        "Function": "click_input",
        "Args": {"button": "left", "double": true},
        "Status": "CONTINUE",
        "Plan": "(1) Click the 'Create presentation from file' button to open a file picker. \\n (2) Select and click the meeting_notes.docx file in the file picker. \\n (3) Click the 'Send' buttom to send the request to Copilot. This completes the task.",
        "Comment": "I need use the Copilot Add-in to create a slide from the meeting_notes.docx."}


example10: |-
  User Request: 
      "Please @Zac to revise the presentation1.pptx."
  Response: 
      {"Observation": "The current control item list indicates the powerpoint application is visible, and the presentation1.pptx is opened.",
        "Thought": "I need to set focus on the powerpoint application and leave a comment in the presentation1.pptx to remind Zac to revise the presentation1.pptx.",
        "ControlLabel": "42",
        "ControlText": "Insert",
        "Function": "click_input",
        "Args": {"button": "left", "double": false},
        "Status": "CONTINUE",
        "Plan": "(1) Click the Comment button to open the comment text box. \\n (2) Input '@Zac, please revise the presentation1.pptx.' in the comment text box.",
        "Comment": "I need to leave a comment in the presentation1.pptx to remind Zac to revise the presentation1.pptx."}
